
// swiftlint:disable all
//
// @generated by ThemeGenie ðŸš€
// Developed by Divyansh Nema on 14/10/24
//
// Contents of this file were automatically generated
// Do not edit manually

import SwiftUI
import DVThemeKit 

@Observable
class ThemeManager {

    private init() {}
    public static var shared: ThemeManager = ThemeManager()
    var currentPrimitives: Primitives = DefaultPrimitives()
    var currentCorners: Corners = Round_DefaultCorners()
    var currentMargins: Margins = DefaultMargins()
    var currentShadows: Shadows = LightBasedThemeShadows()
    var currentFXBackground: FXBackground = Show_DefaultFXBackground()
    var currentRows: Rows = DefaultRows()
    var currentMonotone: Monotone = Default_NoMonotone()
    var currentTypography: Typography = DefaultTypography()
    var currentThemes: Themes = DarkWIPThemes()
    var currentFXGradient: FXGradient = Show_DefaultFXGradient()

}
protocol Primitives {

    init() 
    var overlaysLightCoolCool40Percent: Color { get }
    var blacksBlack15Percent: Color { get }
    var blacksBlack30Percent: Color { get }
    var overlaysDarkNeutralDark100Percent: Color { get }
    var errorLightTheme: Color { get }
    var blacksBlack8Percent: Color { get }
    var whitesWhite60Percent: Color { get }
    var whitesWhite30Percent: Color { get }
    var blacksBlack100Percent: Color { get }
    var errorDarkTheme: Color { get }
    var whitesWhite70Percent: Color { get }
    var whitesWhite80Percent: Color { get }
    var blacksBlack5Percent: Color { get }
    var whitesWhite100Percent: Color { get }
    var whitesWhite10Percent: Color { get }
    var overlaysDarkNeutralDark20Percent: Color { get }
    var blacksBlack40Percent: Color { get }
    var whitesWhite90Percent: Color { get }
    var overlaysLightCoolCool100Percent: Color { get }
    var overlaysLightWarmWarm100Percent: Color { get }
    var blacksBlack75Percent: Color { get }
    var blacksBlack2Percent: Color { get }
    var whitesWhite50Percent: Color { get }
    var whitesWhite40Percent: Color { get }
    var blacksBlack50Percent: Color { get }
    var blacksBlack25Percent: Color { get }
    var blacksBlack60Percent: Color { get }
    var whitesWhite20Percent: Color { get }
    var blacksBlack20Percent: Color { get }
    var blacksBlack10Percent: Color { get }
    var blacksBlack80Percent: Color { get }
    var overlaysLightWarmWarm40Percent: Color { get }
    var blacksBlack4Percent: Color { get }
    var graysDarkGray100Percent: Color { get }
    var blacksBlack0Percent: Color { get }

}
protocol Corners {

    init() 
    var roundnessCard: CGFloat { get }
    var roundnessSmall: CGFloat { get }
    var roundnessMini: CGFloat { get }
    var roundnessCircular: CGFloat { get }
    var roundnessRounded: CGFloat { get }
    var roundnessBaseline: CGFloat { get }

}
protocol Margins {

    init() 
    var feedImageMargins: CGFloat { get }
    var imageHero: CGFloat { get }

}
protocol Shadows {

    init() 
    var shadowOpacityStronger: Color { get }
    var shadowOpacityDramatic: Color { get }
    var shadowOpacityPanel: Color { get }
    var shadowOpacityBaseline: Color { get }
    var shadowOpacityPopovers: Color { get }
    var shadowOpacityFaint: Color { get }

}
protocol FXBackground {

    init() 
    var photoBackground: Bool { get }

}
protocol Rows {

    init() 
    var groupFillField: Color { get }
    var groupStroke: CGFloat { get }
    var rowDateCalendar: CGFloat { get }
    var rowSwitchChevQty: CGFloat { get }
    var rowPadding: CGFloat { get }

}
protocol Monotone {

    init() 
    var bGTint: Color { get }
    var primaryButtonText: Color { get }

}
protocol Typography {

    init() 
    var fontsizeH3: CGFloat { get }
    var fontsizeTitle1: CGFloat { get }
    var lineheightH3: CGFloat { get }
    var fontsizeSubtitle: CGFloat { get }
    var fontsizeCaption2: CGFloat { get }
    var fontsizeDisplayMax: CGFloat { get }
    var lineheightH4: CGFloat { get }
    var fontweightmedium: CGFloat { get }
    var lineheightFeedCardTitle: CGFloat { get }
    var fontsizeH2: CGFloat { get }
    var fontsizeH1: CGFloat { get }
    var lineheightH2: CGFloat { get }
    var lineheightH1: CGFloat { get }
    var fontsizeTitle2: CGFloat { get }
    var lineheightCaption2: CGFloat { get }
    var fontsizeBody: CGFloat { get }
    var fontsizeH4: CGFloat { get }
    var fontsizeFeedCardTitle: CGFloat { get }
    var lineheightCaption1: CGFloat { get }
    var lineheightDetailPageTitle: CGFloat { get }
    var lineheightSubtitle: CGFloat { get }
    var fontsizeDetailPageTitle: CGFloat { get }
    var fontfamilyPPNeueMontreal: String { get }
    var fontweightbook: CGFloat { get }
    var lineheightTitle2: CGFloat { get }
    var lineheightTitle1: CGFloat { get }
    var lineheightBody: CGFloat { get }
    var fontsizeCaption1: CGFloat { get }

}
protocol Themes {

    init() 
    var colorBrandSecondary20Percent: Color { get }
    var colorBrandTertiary: Color { get }
    var fillLighterOverlay: Color { get }
    var surfaceiOSTabBar: Color { get }
    var textReverseText: Color { get }
    var surfaceiOSMaterialSelect: Color { get }
    var surfaceAndroidMaterialSelect: Color { get }
    var colorBrandSecondary: Color { get }
    var systemBlack: Color { get }
    var surfaceAndroidMaterial1Brighter: Color { get }
    var surfaceAndroidField: Color { get }
    var textPrimaryText: Color { get }
    var colorBrandWhite: Color { get }
    var colorBrandAccent: Color { get }
    var surfaceiOSMaterial2Subtler: Color { get }
    var systemAlwaysBlack: Color { get }
    var textOnPhotoText: Color { get }
    var surfaceAndroidMaterial1Baseline: Color { get }
    var colorBrandSecondary60Percent: Color { get }
    var surfaceiOSMaterial1Brighter: Color { get }
    var systemWhite: Color { get }
    var textOnLightText: Color { get }
    var surfaceAndroidMaterial2Subtler: Color { get }
    var systemBluriOS: Color { get }
    var fillIcon: Color { get }
    var colorBrandPrimary: Color { get }
    var colorRedNegativeError: Color { get }
    var roundnessNone: CGFloat { get }
    var surfaceAndroidTabBar: Color { get }
    var surfaceiOSField: Color { get }
    var fillDimOverlay: Color { get }
    var surfaceiOSMaterial1Baseline: Color { get }
    var systemAlwaysBlackTransparent: Color { get }
    var fillLightOverlay: Color { get }
    var textColoredText: Color { get }

}
protocol FXGradient {

    init() 
    var threeDGradientFX: Bool { get }

}
class DefaultPrimitives: Primitives {

    required init() {}
    var overlaysLightCoolCool40Percent: Color { "#D8DDE066".getColor() }
    var blacksBlack15Percent: Color { "#00000026".getColor() }
    var blacksBlack30Percent: Color { "#0000004D".getColor() }
    var overlaysDarkNeutralDark100Percent: Color { "#666666".getColor() }
    var errorLightTheme: Color { "#C24D4D".getColor() }
    var blacksBlack8Percent: Color { "#00000014".getColor() }
    var whitesWhite60Percent: Color { "#FFFFFF99".getColor() }
    var whitesWhite30Percent: Color { "#FFFFFF4D".getColor() }
    var blacksBlack100Percent: Color { "#000000".getColor() }
    var errorDarkTheme: Color { "#E54C4C".getColor() }
    var whitesWhite70Percent: Color { "#FFFFFFB2".getColor() }
    var whitesWhite80Percent: Color { "#FFFFFFCC".getColor() }
    var blacksBlack5Percent: Color { "#0000000D".getColor() }
    var whitesWhite100Percent: Color { "#FFFFFF".getColor() }
    var whitesWhite10Percent: Color { "#FFFFFF1A".getColor() }
    var overlaysDarkNeutralDark20Percent: Color { "#66666633".getColor() }
    var blacksBlack40Percent: Color { "#00000066".getColor() }
    var whitesWhite90Percent: Color { "#FFFFFFE5".getColor() }
    var overlaysLightCoolCool100Percent: Color { "#D8DDE0".getColor() }
    var overlaysLightWarmWarm100Percent: Color { "#E0DDD8".getColor() }
    var blacksBlack75Percent: Color { "#000000BF".getColor() }
    var blacksBlack2Percent: Color { "#00000005".getColor() }
    var whitesWhite50Percent: Color { "#FFFFFF80".getColor() }
    var whitesWhite40Percent: Color { "#FFFFFF66".getColor() }
    var blacksBlack50Percent: Color { "#00000080".getColor() }
    var blacksBlack25Percent: Color { "#00000040".getColor() }
    var blacksBlack60Percent: Color { "#00000099".getColor() }
    var whitesWhite20Percent: Color { "#FFFFFF33".getColor() }
    var blacksBlack20Percent: Color { "#00000033".getColor() }
    var blacksBlack10Percent: Color { "#0000001A".getColor() }
    var blacksBlack80Percent: Color { "#000000CC".getColor() }
    var overlaysLightWarmWarm40Percent: Color { "#E0DDD866".getColor() }
    var blacksBlack4Percent: Color { "#0000000A".getColor() }
    var graysDarkGray100Percent: Color { "#222222".getColor() }
    var blacksBlack0Percent: Color { "#00000000".getColor() }

}
class Round_DefaultCorners: Corners {

    required init() {}
    var roundnessCard: CGFloat { 24.0 }
    var roundnessSmall: CGFloat { 12.0 }
    var roundnessMini: CGFloat { 8.0 }
    var roundnessCircular: CGFloat { 1000.0 }
    var roundnessRounded: CGFloat { 44.0 }
    var roundnessBaseline: CGFloat { 16.0 }

}
class MediumCorners: Corners {

    required init() {}
    var roundnessCard: CGFloat { 4.0 }
    var roundnessSmall: CGFloat { 2.0 }
    var roundnessMini: CGFloat { 2.0 }
    var roundnessCircular: CGFloat { 1000.0 }
    var roundnessRounded: CGFloat { 2.0 }
    var roundnessBaseline: CGFloat { 4.0 }

}
class BoxyCorners: Corners {

    required init() {}
    var roundnessCard: CGFloat { 0.0 }
    var roundnessSmall: CGFloat { 0.0 }
    var roundnessMini: CGFloat { 0.0 }
    var roundnessCircular: CGFloat { 0.0 }
    var roundnessRounded: CGFloat { 0.0 }
    var roundnessBaseline: CGFloat { 0.0 }

}
class DefaultMargins: Margins {

    required init() {}
    var feedImageMargins: CGFloat { 24.0 }
    var imageHero: CGFloat { 120.0 }

}
class EdgetoEdgeMargins: Margins {

    required init() {}
    var feedImageMargins: CGFloat { 0.0 }
    var imageHero: CGFloat { 0.0 }

}
class LightBasedThemeShadows: Shadows {

    required init() {}
    var shadowOpacityStronger: Color { Color.blacksBlack4Percent }
    var shadowOpacityDramatic: Color { Color.blacksBlack10Percent }
    var shadowOpacityPanel: Color { Color.blacksBlack40Percent }
    var shadowOpacityBaseline: Color { Color.blacksBlack4Percent }
    var shadowOpacityPopovers: Color { Color.blacksBlack30Percent }
    var shadowOpacityFaint: Color { Color.blacksBlack2Percent }

}
class DarkBasedThemeShadows: Shadows {

    required init() {}
    var shadowOpacityStronger: Color { Color.blacksBlack20Percent }
    var shadowOpacityDramatic: Color { Color.blacksBlack25Percent }
    var shadowOpacityPanel: Color { Color.blacksBlack80Percent }
    var shadowOpacityBaseline: Color { Color.blacksBlack20Percent }
    var shadowOpacityPopovers: Color { Color.blacksBlack60Percent }
    var shadowOpacityFaint: Color { Color.blacksBlack10Percent }

}
class CompletelyFlatShadows: Shadows {

    required init() {}
    var shadowOpacityStronger: Color { Color.blacksBlack0Percent }
    var shadowOpacityDramatic: Color { Color.blacksBlack0Percent }
    var shadowOpacityPanel: Color { Color.blacksBlack40Percent }
    var shadowOpacityBaseline: Color { Color.blacksBlack0Percent }
    var shadowOpacityPopovers: Color { Color.blacksBlack30Percent }
    var shadowOpacityFaint: Color { Color.blacksBlack0Percent }

}
class Show_DefaultFXBackground: FXBackground {

    required init() {}
    var photoBackground: Bool { true }

}
class HideFXBackground: FXBackground {

    required init() {}
    var photoBackground: Bool { false }

}
class DefaultRows: Rows {

    required init() {}
    var groupFillField: Color { Color.surfaceiOSField }
    var groupStroke: CGFloat { 0.25 }
    var rowDateCalendar: CGFloat { 8.0 }
    var rowSwitchChevQty: CGFloat { 12.0 }
    var rowPadding: CGFloat { 16.0 }

}
class NoBackground_DeprecateForNowRows: Rows {

    required init() {}
    var groupFillField: Color { Color.blacksBlack0Percent }
    var groupStroke: CGFloat { 0.0 }
    var rowDateCalendar: CGFloat { 0.0 }
    var rowSwitchChevQty: CGFloat { 0.0 }
    var rowPadding: CGFloat { 0.0 }

}
class Default_NoMonotone: Monotone {

    required init() {}
    var bGTint: Color { Color.colorBrandAccent }
    var primaryButtonText: Color { Color.textPrimaryText }

}
class MonotoneMonotone: Monotone {

    required init() {}
    var bGTint: Color { Color.colorBrandTertiary }
    var primaryButtonText: Color { Color.textReverseText }

}
class DefaultTypography: Typography {

    required init() {}
    var fontsizeH3: CGFloat { 25.0 }
    var fontsizeTitle1: CGFloat { 52.0 }
    var lineheightH3: CGFloat { 28.0 }
    var fontsizeSubtitle: CGFloat { 15.0 }
    var fontsizeCaption2: CGFloat { 10.0 }
    var fontsizeDisplayMax: CGFloat { 120.0 }
    var lineheightH4: CGFloat { 22.0 }
    var fontweightmedium: CGFloat { 500.0 }
    var lineheightFeedCardTitle: CGFloat { 34.0 }
    var fontsizeH2: CGFloat { 31.0 }
    var fontsizeH1: CGFloat { 34.0 }
    var lineheightH2: CGFloat { 34.0 }
    var lineheightH1: CGFloat { 40.0 }
    var fontsizeTitle2: CGFloat { 40.0 }
    var lineheightCaption2: CGFloat { 11.0 }
    var fontsizeBody: CGFloat { 16.0 }
    var fontsizeH4: CGFloat { 20.0 }
    var fontsizeFeedCardTitle: CGFloat { 31.0 }
    var lineheightCaption1: CGFloat { 16.0 }
    var lineheightDetailPageTitle: CGFloat { 31.0 }
    var lineheightSubtitle: CGFloat { 17.0 }
    var fontsizeDetailPageTitle: CGFloat { 31.0 }
    var fontfamilyPPNeueMontreal: String { "PP Neue Montreal" }
    var fontweightbook: CGFloat { 400.0 }
    var lineheightTitle2: CGFloat { 44.0 }
    var lineheightTitle1: CGFloat { 56.0 }
    var lineheightBody: CGFloat { 18.0 }
    var fontsizeCaption1: CGFloat { 13.0 }

}
class IOSStandard_UnusedTypography: Typography {

    required init() {}
    var fontsizeH3: CGFloat { 22.0 }
    var fontsizeTitle1: CGFloat { 44.0 }
    var lineheightH3: CGFloat { 24.0 }
    var fontsizeSubtitle: CGFloat { 15.0 }
    var fontsizeCaption2: CGFloat { 10.0 }
    var fontsizeDisplayMax: CGFloat { 120.0 }
    var lineheightH4: CGFloat { 22.0 }
    var fontweightmedium: CGFloat { 500.0 }
    var lineheightFeedCardTitle: CGFloat { 24.0 }
    var fontsizeH2: CGFloat { 24.0 }
    var fontsizeH1: CGFloat { 28.0 }
    var lineheightH2: CGFloat { 28.0 }
    var lineheightH1: CGFloat { 34.0 }
    var fontsizeTitle2: CGFloat { 34.0 }
    var lineheightCaption2: CGFloat { 11.0 }
    var fontsizeBody: CGFloat { 16.0 }
    var fontsizeH4: CGFloat { 20.0 }
    var fontsizeFeedCardTitle: CGFloat { 22.0 }
    var lineheightCaption1: CGFloat { 16.0 }
    var lineheightDetailPageTitle: CGFloat { 31.0 }
    var lineheightSubtitle: CGFloat { 17.0 }
    var fontsizeDetailPageTitle: CGFloat { 31.0 }
    var fontfamilyPPNeueMontreal: String { "PP Neue Montreal" }
    var fontweightbook: CGFloat { 400.0 }
    var lineheightTitle2: CGFloat { 40.0 }
    var lineheightTitle1: CGFloat { 48.0 }
    var lineheightBody: CGFloat { 18.0 }
    var fontsizeCaption1: CGFloat { 13.0 }

}
class SmallerWSASAATypography: Typography {

    required init() {}
    var fontsizeH3: CGFloat { 20.0 }
    var fontsizeTitle1: CGFloat { 28.0 }
    var lineheightH3: CGFloat { 20.0 }
    var fontsizeSubtitle: CGFloat { 15.0 }
    var fontsizeCaption2: CGFloat { 10.0 }
    var fontsizeDisplayMax: CGFloat { 120.0 }
    var lineheightH4: CGFloat { 20.0 }
    var fontweightmedium: CGFloat { 400.0 }
    var lineheightFeedCardTitle: CGFloat { 22.0 }
    var fontsizeH2: CGFloat { 20.0 }
    var fontsizeH1: CGFloat { 24.0 }
    var lineheightH2: CGFloat { 24.0 }
    var lineheightH1: CGFloat { 28.0 }
    var fontsizeTitle2: CGFloat { 28.0 }
    var lineheightCaption2: CGFloat { 11.0 }
    var fontsizeBody: CGFloat { 16.0 }
    var fontsizeH4: CGFloat { 18.0 }
    var fontsizeFeedCardTitle: CGFloat { 20.0 }
    var lineheightCaption1: CGFloat { 16.0 }
    var lineheightDetailPageTitle: CGFloat { 28.0 }
    var lineheightSubtitle: CGFloat { 17.0 }
    var fontsizeDetailPageTitle: CGFloat { 24.0 }
    var fontfamilyPPNeueMontreal: String { "Barlow Condensed" }
    var fontweightbook: CGFloat { 300.0 }
    var lineheightTitle2: CGFloat { 32.0 }
    var lineheightTitle1: CGFloat { 32.0 }
    var lineheightBody: CGFloat { 18.0 }
    var fontsizeCaption1: CGFloat { 13.0 }

}
class DarkWIPThemes: Themes {

    required init() {}
    var colorBrandSecondary20Percent: Color { "#57555133".getColor() }
    var colorBrandTertiary: Color { "#938B81".getColor() }
    var fillLighterOverlay: Color { Color.whitesWhite20Percent }
    var surfaceiOSTabBar: Color { "#58555199".getColor() }
    var textReverseText: Color { Color.graysDarkGray100Percent }
    var surfaceiOSMaterialSelect: Color { Color.whitesWhite80Percent }
    var surfaceAndroidMaterialSelect: Color { Color.whitesWhite80Percent }
    var colorBrandSecondary: Color { "#575551".getColor() }
    var systemBlack: Color { Color.blacksBlack100Percent }
    var surfaceAndroidMaterial1Brighter: Color { "#FFFFFF".getColor() }
    var surfaceAndroidField: Color { "#FFFFFF".getColor() }
    var textPrimaryText: Color { Color.whitesWhite100Percent }
    var colorBrandWhite: Color { Color.whitesWhite100Percent }
    var colorBrandAccent: Color { "#C8B863".getColor() }
    var surfaceiOSMaterial2Subtler: Color { "#E2DCD626".getColor() }
    var systemAlwaysBlack: Color { Color.blacksBlack100Percent }
    var textOnPhotoText: Color { Color.whitesWhite100Percent }
    var surfaceAndroidMaterial1Baseline: Color { "#FFFFFF".getColor() }
    var colorBrandSecondary60Percent: Color { "#57555199".getColor() }
    var surfaceiOSMaterial1Brighter: Color { "#E2DCD673".getColor() }
    var systemWhite: Color { Color.whitesWhite100Percent }
    var textOnLightText: Color { Color.graysDarkGray100Percent }
    var surfaceAndroidMaterial2Subtler: Color { "#FFFFFF".getColor() }
    var systemBluriOS: Color { Color.overlaysDarkNeutralDark20Percent }
    var fillIcon: Color { Color.whitesWhite100Percent }
    var colorBrandPrimary: Color { "#1F1E1C".getColor() }
    var colorRedNegativeError: Color { Color.errorDarkTheme }
    var roundnessNone: CGFloat { 0.0 }
    var surfaceAndroidTabBar: Color { "#FFFFFF".getColor() }
    var surfaceiOSField: Color { "#E2DCD614".getColor() }
    var fillDimOverlay: Color { Color.blacksBlack100Percent }
    var surfaceiOSMaterial1Baseline: Color { "#E2DCD64D".getColor() }
    var systemAlwaysBlackTransparent: Color { Color.blacksBlack10Percent }
    var fillLightOverlay: Color { Color.whitesWhite10Percent }
    var textColoredText: Color { "#C8B863".getColor() }

}
class LightDefaultThemes: Themes {

    required init() {}
    var colorBrandSecondary20Percent: Color { "#C8C0B433".getColor() }
    var colorBrandTertiary: Color { "#A5A39F".getColor() }
    var fillLighterOverlay: Color { Color.whitesWhite90Percent }
    var surfaceiOSTabBar: Color { "#322C25E5".getColor() }
    var textReverseText: Color { "#F5F1E9".getColor() }
    var surfaceiOSMaterialSelect: Color { Color.whitesWhite100Percent }
    var surfaceAndroidMaterialSelect: Color { Color.whitesWhite100Percent }
    var colorBrandSecondary: Color { "#C8C0B4".getColor() }
    var systemBlack: Color { Color.whitesWhite100Percent }
    var surfaceAndroidMaterial1Brighter: Color { "#F8F7F5".getColor() }
    var surfaceAndroidField: Color { "#F7F5F2".getColor() }
    var textPrimaryText: Color { "#363330".getColor() }
    var colorBrandWhite: Color { Color.whitesWhite100Percent }
    var colorBrandAccent: Color { "#B4A68B".getColor() }
    var surfaceiOSMaterial2Subtler: Color { "#F8F7F699".getColor() }
    var systemAlwaysBlack: Color { Color.blacksBlack100Percent }
    var textOnPhotoText: Color { Color.whitesWhite100Percent }
    var surfaceAndroidMaterial1Baseline: Color { "#F7F5F2".getColor() }
    var colorBrandSecondary60Percent: Color { "#C8C0B499".getColor() }
    var surfaceiOSMaterial1Brighter: Color { "#F8F7F6E5".getColor() }
    var systemWhite: Color { Color.blacksBlack100Percent }
    var textOnLightText: Color { "#363330".getColor() }
    var surfaceAndroidMaterial2Subtler: Color { "#F7F4F1".getColor() }
    var systemBluriOS: Color { Color.overlaysLightWarmWarm40Percent }
    var fillIcon: Color { "#363330".getColor() }
    var colorBrandPrimary: Color { "#F5F1E9".getColor() }
    var colorRedNegativeError: Color { Color.errorLightTheme }
    var roundnessNone: CGFloat { 0.0 }
    var surfaceAndroidTabBar: Color { "#464139".getColor() }
    var surfaceiOSField: Color { "#F8F7F6BF".getColor() }
    var fillDimOverlay: Color { Color.overlaysLightWarmWarm100Percent }
    var surfaceiOSMaterial1Baseline: Color { "#F8F7F6BF".getColor() }
    var systemAlwaysBlackTransparent: Color { Color.blacksBlack5Percent }
    var fillLightOverlay: Color { Color.whitesWhite60Percent }
    var textColoredText: Color { "#948058".getColor() }

}
class SAAWIPThemes: Themes {

    required init() {}
    var colorBrandSecondary20Percent: Color { "#CCCDC433".getColor() }
    var colorBrandTertiary: Color { "#F2F2DE".getColor() }
    var fillLighterOverlay: Color { Color.whitesWhite90Percent }
    var surfaceiOSTabBar: Color { "#354230E5".getColor() }
    var textReverseText: Color { "#F5F1E9".getColor() }
    var surfaceiOSMaterialSelect: Color { Color.whitesWhite100Percent }
    var surfaceAndroidMaterialSelect: Color { Color.whitesWhite100Percent }
    var colorBrandSecondary: Color { "#CCCDC4".getColor() }
    var systemBlack: Color { Color.whitesWhite100Percent }
    var surfaceAndroidMaterial1Brighter: Color { "#FFFFFF".getColor() }
    var surfaceAndroidField: Color { "#FFFFFF".getColor() }
    var textPrimaryText: Color { "#343434".getColor() }
    var colorBrandWhite: Color { Color.whitesWhite100Percent }
    var colorBrandAccent: Color { "#A7A8A1".getColor() }
    var surfaceiOSMaterial2Subtler: Color { "#F6F6F54D".getColor() }
    var systemAlwaysBlack: Color { Color.blacksBlack100Percent }
    var textOnPhotoText: Color { Color.whitesWhite100Percent }
    var surfaceAndroidMaterial1Baseline: Color { "#FFFFFF".getColor() }
    var colorBrandSecondary60Percent: Color { "#CCCDC499".getColor() }
    var surfaceiOSMaterial1Brighter: Color { "#F6F6F5B2".getColor() }
    var systemWhite: Color { Color.blacksBlack100Percent }
    var textOnLightText: Color { "#354230".getColor() }
    var surfaceAndroidMaterial2Subtler: Color { "#FFFFFF".getColor() }
    var systemBluriOS: Color { Color.overlaysLightWarmWarm40Percent }
    var fillIcon: Color { Color.graysDarkGray100Percent }
    var colorBrandPrimary: Color { "#CECFC6".getColor() }
    var colorRedNegativeError: Color { Color.errorLightTheme }
    var roundnessNone: CGFloat { 0.0 }
    var surfaceAndroidTabBar: Color { "#FFFFFF".getColor() }
    var surfaceiOSField: Color { "#F6F6F566".getColor() }
    var fillDimOverlay: Color { Color.overlaysLightWarmWarm100Percent }
    var surfaceiOSMaterial1Baseline: Color { "#F6F6F580".getColor() }
    var systemAlwaysBlackTransparent: Color { Color.blacksBlack5Percent }
    var fillLightOverlay: Color { Color.whitesWhite60Percent }
    var textColoredText: Color { "#426435".getColor() }

}
class WSAThemes: Themes {

    required init() {}
    var colorBrandSecondary20Percent: Color { "#E1E1E133".getColor() }
    var colorBrandTertiary: Color { "#A09C98".getColor() }
    var fillLighterOverlay: Color { Color.whitesWhite70Percent }
    var surfaceiOSTabBar: Color { "#343434E5".getColor() }
    var textReverseText: Color { "#F5F1E9".getColor() }
    var surfaceiOSMaterialSelect: Color { Color.whitesWhite100Percent }
    var surfaceAndroidMaterialSelect: Color { Color.whitesWhite100Percent }
    var colorBrandSecondary: Color { "#E1E1E1".getColor() }
    var systemBlack: Color { Color.whitesWhite100Percent }
    var surfaceAndroidMaterial1Brighter: Color { "#FCFAF8".getColor() }
    var surfaceAndroidField: Color { "#F9F8F7".getColor() }
    var textPrimaryText: Color { "#1B1B1B".getColor() }
    var colorBrandWhite: Color { Color.whitesWhite100Percent }
    var colorBrandAccent: Color { "#1B1B1B".getColor() }
    var surfaceiOSMaterial2Subtler: Color { "#FCFBF999".getColor() }
    var systemAlwaysBlack: Color { Color.blacksBlack100Percent }
    var textOnPhotoText: Color { Color.whitesWhite100Percent }
    var surfaceAndroidMaterial1Baseline: Color { "#F9F8F7".getColor() }
    var colorBrandSecondary60Percent: Color { "#E1E1E199".getColor() }
    var surfaceiOSMaterial1Brighter: Color { "#FCFBF9E5".getColor() }
    var systemWhite: Color { Color.blacksBlack100Percent }
    var textOnLightText: Color { "#343434".getColor() }
    var surfaceAndroidMaterial2Subtler: Color { "#F7F7F5".getColor() }
    var systemBluriOS: Color { Color.overlaysLightWarmWarm40Percent }
    var fillIcon: Color { Color.graysDarkGray100Percent }
    var colorBrandPrimary: Color { "#F1EFEE".getColor() }
    var colorRedNegativeError: Color { Color.errorLightTheme }
    var roundnessNone: CGFloat { 0.0 }
    var surfaceAndroidTabBar: Color { "#484747".getColor() }
    var surfaceiOSField: Color { "#FCFBF9BF".getColor() }
    var fillDimOverlay: Color { Color.overlaysLightWarmWarm100Percent }
    var surfaceiOSMaterial1Baseline: Color { "#FCFBF9BF".getColor() }
    var systemAlwaysBlackTransparent: Color { Color.blacksBlack5Percent }
    var fillLightOverlay: Color { Color.whitesWhite50Percent }
    var textColoredText: Color { "#4A4949".getColor() }

}
class Show_DefaultFXGradient: FXGradient {

    required init() {}
    var threeDGradientFX: Bool { true }

}
class HideFXGradient: FXGradient {

    required init() {}
    var threeDGradientFX: Bool { false }

}
extension Bool {
    static var photoBackground : Bool {
        ThemeManager.shared.currentFXBackground.photoBackground
    }
    static var threeDGradientFX : Bool {
        ThemeManager.shared.currentFXGradient.threeDGradientFX
    }
}
extension Color {
    static var overlaysLightCoolCool40Percent : Color {
        ThemeManager.shared.currentPrimitives.overlaysLightCoolCool40Percent
    }
    static var blacksBlack15Percent : Color {
        ThemeManager.shared.currentPrimitives.blacksBlack15Percent
    }
    static var blacksBlack30Percent : Color {
        ThemeManager.shared.currentPrimitives.blacksBlack30Percent
    }
    static var overlaysDarkNeutralDark100Percent : Color {
        ThemeManager.shared.currentPrimitives.overlaysDarkNeutralDark100Percent
    }
    static var errorLightTheme : Color {
        ThemeManager.shared.currentPrimitives.errorLightTheme
    }
    static var blacksBlack8Percent : Color {
        ThemeManager.shared.currentPrimitives.blacksBlack8Percent
    }
    static var whitesWhite60Percent : Color {
        ThemeManager.shared.currentPrimitives.whitesWhite60Percent
    }
    static var whitesWhite30Percent : Color {
        ThemeManager.shared.currentPrimitives.whitesWhite30Percent
    }
    static var blacksBlack100Percent : Color {
        ThemeManager.shared.currentPrimitives.blacksBlack100Percent
    }
    static var errorDarkTheme : Color {
        ThemeManager.shared.currentPrimitives.errorDarkTheme
    }
    static var whitesWhite70Percent : Color {
        ThemeManager.shared.currentPrimitives.whitesWhite70Percent
    }
    static var whitesWhite80Percent : Color {
        ThemeManager.shared.currentPrimitives.whitesWhite80Percent
    }
    static var blacksBlack5Percent : Color {
        ThemeManager.shared.currentPrimitives.blacksBlack5Percent
    }
    static var whitesWhite100Percent : Color {
        ThemeManager.shared.currentPrimitives.whitesWhite100Percent
    }
    static var whitesWhite10Percent : Color {
        ThemeManager.shared.currentPrimitives.whitesWhite10Percent
    }
    static var overlaysDarkNeutralDark20Percent : Color {
        ThemeManager.shared.currentPrimitives.overlaysDarkNeutralDark20Percent
    }
    static var blacksBlack40Percent : Color {
        ThemeManager.shared.currentPrimitives.blacksBlack40Percent
    }
    static var whitesWhite90Percent : Color {
        ThemeManager.shared.currentPrimitives.whitesWhite90Percent
    }
    static var overlaysLightCoolCool100Percent : Color {
        ThemeManager.shared.currentPrimitives.overlaysLightCoolCool100Percent
    }
    static var overlaysLightWarmWarm100Percent : Color {
        ThemeManager.shared.currentPrimitives.overlaysLightWarmWarm100Percent
    }
    static var blacksBlack75Percent : Color {
        ThemeManager.shared.currentPrimitives.blacksBlack75Percent
    }
    static var blacksBlack2Percent : Color {
        ThemeManager.shared.currentPrimitives.blacksBlack2Percent
    }
    static var whitesWhite50Percent : Color {
        ThemeManager.shared.currentPrimitives.whitesWhite50Percent
    }
    static var whitesWhite40Percent : Color {
        ThemeManager.shared.currentPrimitives.whitesWhite40Percent
    }
    static var blacksBlack50Percent : Color {
        ThemeManager.shared.currentPrimitives.blacksBlack50Percent
    }
    static var blacksBlack25Percent : Color {
        ThemeManager.shared.currentPrimitives.blacksBlack25Percent
    }
    static var blacksBlack60Percent : Color {
        ThemeManager.shared.currentPrimitives.blacksBlack60Percent
    }
    static var whitesWhite20Percent : Color {
        ThemeManager.shared.currentPrimitives.whitesWhite20Percent
    }
    static var blacksBlack20Percent : Color {
        ThemeManager.shared.currentPrimitives.blacksBlack20Percent
    }
    static var blacksBlack10Percent : Color {
        ThemeManager.shared.currentPrimitives.blacksBlack10Percent
    }
    static var blacksBlack80Percent : Color {
        ThemeManager.shared.currentPrimitives.blacksBlack80Percent
    }
    static var overlaysLightWarmWarm40Percent : Color {
        ThemeManager.shared.currentPrimitives.overlaysLightWarmWarm40Percent
    }
    static var blacksBlack4Percent : Color {
        ThemeManager.shared.currentPrimitives.blacksBlack4Percent
    }
    static var graysDarkGray100Percent : Color {
        ThemeManager.shared.currentPrimitives.graysDarkGray100Percent
    }
    static var blacksBlack0Percent : Color {
        ThemeManager.shared.currentPrimitives.blacksBlack0Percent
    }
    static var shadowOpacityStronger : Color {
        ThemeManager.shared.currentShadows.shadowOpacityStronger
    }
    static var shadowOpacityDramatic : Color {
        ThemeManager.shared.currentShadows.shadowOpacityDramatic
    }
    static var shadowOpacityPanel : Color {
        ThemeManager.shared.currentShadows.shadowOpacityPanel
    }
    static var shadowOpacityBaseline : Color {
        ThemeManager.shared.currentShadows.shadowOpacityBaseline
    }
    static var shadowOpacityPopovers : Color {
        ThemeManager.shared.currentShadows.shadowOpacityPopovers
    }
    static var shadowOpacityFaint : Color {
        ThemeManager.shared.currentShadows.shadowOpacityFaint
    }
    static var groupFillField : Color {
        ThemeManager.shared.currentRows.groupFillField
    }
    static var bGTint : Color {
        ThemeManager.shared.currentMonotone.bGTint
    }
    static var primaryButtonText : Color {
        ThemeManager.shared.currentMonotone.primaryButtonText
    }
    static var colorBrandSecondary20Percent : Color {
        ThemeManager.shared.currentThemes.colorBrandSecondary20Percent
    }
    static var colorBrandTertiary : Color {
        ThemeManager.shared.currentThemes.colorBrandTertiary
    }
    static var fillLighterOverlay : Color {
        ThemeManager.shared.currentThemes.fillLighterOverlay
    }
    static var surfaceiOSTabBar : Color {
        ThemeManager.shared.currentThemes.surfaceiOSTabBar
    }
    static var textReverseText : Color {
        ThemeManager.shared.currentThemes.textReverseText
    }
    static var surfaceiOSMaterialSelect : Color {
        ThemeManager.shared.currentThemes.surfaceiOSMaterialSelect
    }
    static var surfaceAndroidMaterialSelect : Color {
        ThemeManager.shared.currentThemes.surfaceAndroidMaterialSelect
    }
    static var colorBrandSecondary : Color {
        ThemeManager.shared.currentThemes.colorBrandSecondary
    }
    static var systemBlack : Color {
        ThemeManager.shared.currentThemes.systemBlack
    }
    static var surfaceAndroidMaterial1Brighter : Color {
        ThemeManager.shared.currentThemes.surfaceAndroidMaterial1Brighter
    }
    static var surfaceAndroidField : Color {
        ThemeManager.shared.currentThemes.surfaceAndroidField
    }
    static var textPrimaryText : Color {
        ThemeManager.shared.currentThemes.textPrimaryText
    }
    static var colorBrandWhite : Color {
        ThemeManager.shared.currentThemes.colorBrandWhite
    }
    static var colorBrandAccent : Color {
        ThemeManager.shared.currentThemes.colorBrandAccent
    }
    static var surfaceiOSMaterial2Subtler : Color {
        ThemeManager.shared.currentThemes.surfaceiOSMaterial2Subtler
    }
    static var systemAlwaysBlack : Color {
        ThemeManager.shared.currentThemes.systemAlwaysBlack
    }
    static var textOnPhotoText : Color {
        ThemeManager.shared.currentThemes.textOnPhotoText
    }
    static var surfaceAndroidMaterial1Baseline : Color {
        ThemeManager.shared.currentThemes.surfaceAndroidMaterial1Baseline
    }
    static var colorBrandSecondary60Percent : Color {
        ThemeManager.shared.currentThemes.colorBrandSecondary60Percent
    }
    static var surfaceiOSMaterial1Brighter : Color {
        ThemeManager.shared.currentThemes.surfaceiOSMaterial1Brighter
    }
    static var systemWhite : Color {
        ThemeManager.shared.currentThemes.systemWhite
    }
    static var textOnLightText : Color {
        ThemeManager.shared.currentThemes.textOnLightText
    }
    static var surfaceAndroidMaterial2Subtler : Color {
        ThemeManager.shared.currentThemes.surfaceAndroidMaterial2Subtler
    }
    static var systemBluriOS : Color {
        ThemeManager.shared.currentThemes.systemBluriOS
    }
    static var fillIcon : Color {
        ThemeManager.shared.currentThemes.fillIcon
    }
    static var colorBrandPrimary : Color {
        ThemeManager.shared.currentThemes.colorBrandPrimary
    }
    static var colorRedNegativeError : Color {
        ThemeManager.shared.currentThemes.colorRedNegativeError
    }
    static var surfaceAndroidTabBar : Color {
        ThemeManager.shared.currentThemes.surfaceAndroidTabBar
    }
    static var surfaceiOSField : Color {
        ThemeManager.shared.currentThemes.surfaceiOSField
    }
    static var fillDimOverlay : Color {
        ThemeManager.shared.currentThemes.fillDimOverlay
    }
    static var surfaceiOSMaterial1Baseline : Color {
        ThemeManager.shared.currentThemes.surfaceiOSMaterial1Baseline
    }
    static var systemAlwaysBlackTransparent : Color {
        ThemeManager.shared.currentThemes.systemAlwaysBlackTransparent
    }
    static var fillLightOverlay : Color {
        ThemeManager.shared.currentThemes.fillLightOverlay
    }
    static var textColoredText : Color {
        ThemeManager.shared.currentThemes.textColoredText
    }
}
extension CGFloat {
    static var roundnessCard : CGFloat {
        ThemeManager.shared.currentCorners.roundnessCard
    }
    static var roundnessSmall : CGFloat {
        ThemeManager.shared.currentCorners.roundnessSmall
    }
    static var roundnessMini : CGFloat {
        ThemeManager.shared.currentCorners.roundnessMini
    }
    static var roundnessCircular : CGFloat {
        ThemeManager.shared.currentCorners.roundnessCircular
    }
    static var roundnessRounded : CGFloat {
        ThemeManager.shared.currentCorners.roundnessRounded
    }
    static var roundnessBaseline : CGFloat {
        ThemeManager.shared.currentCorners.roundnessBaseline
    }
    static var feedImageMargins : CGFloat {
        ThemeManager.shared.currentMargins.feedImageMargins
    }
    static var imageHero : CGFloat {
        ThemeManager.shared.currentMargins.imageHero
    }
    static var groupStroke : CGFloat {
        ThemeManager.shared.currentRows.groupStroke
    }
    static var rowDateCalendar : CGFloat {
        ThemeManager.shared.currentRows.rowDateCalendar
    }
    static var rowSwitchChevQty : CGFloat {
        ThemeManager.shared.currentRows.rowSwitchChevQty
    }
    static var rowPadding : CGFloat {
        ThemeManager.shared.currentRows.rowPadding
    }
    static var fontsizeH3 : CGFloat {
        ThemeManager.shared.currentTypography.fontsizeH3
    }
    static var fontsizeTitle1 : CGFloat {
        ThemeManager.shared.currentTypography.fontsizeTitle1
    }
    static var lineheightH3 : CGFloat {
        ThemeManager.shared.currentTypography.lineheightH3
    }
    static var fontsizeSubtitle : CGFloat {
        ThemeManager.shared.currentTypography.fontsizeSubtitle
    }
    static var fontsizeCaption2 : CGFloat {
        ThemeManager.shared.currentTypography.fontsizeCaption2
    }
    static var fontsizeDisplayMax : CGFloat {
        ThemeManager.shared.currentTypography.fontsizeDisplayMax
    }
    static var lineheightH4 : CGFloat {
        ThemeManager.shared.currentTypography.lineheightH4
    }
    static var fontweightmedium : CGFloat {
        ThemeManager.shared.currentTypography.fontweightmedium
    }
    static var lineheightFeedCardTitle : CGFloat {
        ThemeManager.shared.currentTypography.lineheightFeedCardTitle
    }
    static var fontsizeH2 : CGFloat {
        ThemeManager.shared.currentTypography.fontsizeH2
    }
    static var fontsizeH1 : CGFloat {
        ThemeManager.shared.currentTypography.fontsizeH1
    }
    static var lineheightH2 : CGFloat {
        ThemeManager.shared.currentTypography.lineheightH2
    }
    static var lineheightH1 : CGFloat {
        ThemeManager.shared.currentTypography.lineheightH1
    }
    static var fontsizeTitle2 : CGFloat {
        ThemeManager.shared.currentTypography.fontsizeTitle2
    }
    static var lineheightCaption2 : CGFloat {
        ThemeManager.shared.currentTypography.lineheightCaption2
    }
    static var fontsizeBody : CGFloat {
        ThemeManager.shared.currentTypography.fontsizeBody
    }
    static var fontsizeH4 : CGFloat {
        ThemeManager.shared.currentTypography.fontsizeH4
    }
    static var fontsizeFeedCardTitle : CGFloat {
        ThemeManager.shared.currentTypography.fontsizeFeedCardTitle
    }
    static var lineheightCaption1 : CGFloat {
        ThemeManager.shared.currentTypography.lineheightCaption1
    }
    static var lineheightDetailPageTitle : CGFloat {
        ThemeManager.shared.currentTypography.lineheightDetailPageTitle
    }
    static var lineheightSubtitle : CGFloat {
        ThemeManager.shared.currentTypography.lineheightSubtitle
    }
    static var fontsizeDetailPageTitle : CGFloat {
        ThemeManager.shared.currentTypography.fontsizeDetailPageTitle
    }
    static var fontweightbook : CGFloat {
        ThemeManager.shared.currentTypography.fontweightbook
    }
    static var lineheightTitle2 : CGFloat {
        ThemeManager.shared.currentTypography.lineheightTitle2
    }
    static var lineheightTitle1 : CGFloat {
        ThemeManager.shared.currentTypography.lineheightTitle1
    }
    static var lineheightBody : CGFloat {
        ThemeManager.shared.currentTypography.lineheightBody
    }
    static var fontsizeCaption1 : CGFloat {
        ThemeManager.shared.currentTypography.fontsizeCaption1
    }
    static var roundnessNone : CGFloat {
        ThemeManager.shared.currentThemes.roundnessNone
    }
}
extension String {
    static var fontfamilyPPNeueMontreal : String {
        ThemeManager.shared.currentTypography.fontfamilyPPNeueMontreal
    }
}

// swiftlint:enable all
